language: cpp

#compiler:
#  - gcc
#  - clang TODO!

sudo: required

matrix:
  include:
    - os: linux
      dist: trusty
      env: PYTHONVER=3.5
    - os: linux
      dist: trusty
      env: PYTHONVER=2.7
    - os: osx
      osx_image: xcode8.2
      env: PYTHONVER=2.7
  exclude:
    - os: osx
      osx_image: xcode8.2
      env: PYTHONVER=3.5

before_install:
  - if [ $TRAVIS_OS_NAME == linux ]; then export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g"); fi
  - if [ $TRAVIS_OS_NAME == osx ]; then export PATH=/usr/bin:$PATH; fi

  - if [ $TRAVIS_OS_NAME == linux ]; then sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ zesty main universe"; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get update; fi

install:
  ### LINUX dependencies
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get install --no-install-recommends -t zesty -y lcov libnlopt-dev libeigen3-dev libboost1.63-dev libboost-python1.63-dev python$PYTHONVER-dev python$([ "${PYTHONVER:0:1}" == 3 ] && echo ${PYTHONVER:0:1} || echo "")-numpy; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get autoremove; fi # in particular remove old compilers so that new ones are the default
  - if [ $TRAVIS_OS_NAME == linux ]; then export CMAKE_ARGS="$CMAKE_ARGS -DPYTHON_EXECUTABLE=/usr/bin/python$PYTHONVER -DPYTHON_INCLUDE_DIR=/usr/include/python$PYTHONVER"; fi

  ### OSX dependencies
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update && brew tap homebrew/science && brew install eigen nlopt boost-python; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then pip install numpy; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then rm /usr/local/include/c++; fi # https://github.com/Homebrew/brew/issues/1742#issuecomment-277308817

  ### Vinecopulib
  - git clone --depth=1 https://github.com/vinecopulib/vinecopulib.git
  - cd vinecopulib
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release
  - make
  - sudo make install
  - cd ..

script:
  - mkdir build-debug
  - cd build-debug
  - cmake .. $CMAKE_ARGS -DCMAKE_BUILD_TYPE=Debug 
  - make 
  - make test || cat Testing/Temporary/LastTest.log / # "/" intentional! (just to make cat exit with an error code)
  - cd ..

  - mkdir build-release
  - cmake .. $CMAKE_ARGS -DCMAKE_BUILD_TYPE=Release 
  - make 
  - make test || cat Testing/Temporary/LastTest.log / # "/" intentional! (just to make cat exit with an error code)
  - sudo make install
  - cd ..

  # TODO: test installation
